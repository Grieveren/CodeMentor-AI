// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: executor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Code execution request
type ExecuteRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Language       string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`                                    // Programming language (python, javascript, go, etc.)
	Code           string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                                            // Code to execute
	Input          string                 `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`                                          // Optional stdin input
	TimeoutSeconds int32                  `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"` // Execution timeout (default: 30s)
	MemoryLimitMb  int64                  `protobuf:"varint,5,opt,name=memory_limit_mb,json=memoryLimitMb,proto3" json:"memory_limit_mb,omitempty"`  // Memory limit in MB (default: 128MB)
	CpuLimit       float64                `protobuf:"fixed64,6,opt,name=cpu_limit,json=cpuLimit,proto3" json:"cpu_limit,omitempty"`                  // CPU limit as fraction (default: 0.5)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	mi := &file_executor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_executor_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ExecuteRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExecuteRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *ExecuteRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *ExecuteRequest) GetMemoryLimitMb() int64 {
	if x != nil {
		return x.MemoryLimitMb
	}
	return 0
}

func (x *ExecuteRequest) GetCpuLimit() float64 {
	if x != nil {
		return x.CpuLimit
	}
	return 0
}

// Code execution response
type ExecuteResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Stdout          string                 `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`                                             // Standard output
	Stderr          string                 `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`                                             // Standard error
	ExitCode        int32                  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`                        // Exit code
	Timeout         bool                   `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`                                          // Whether execution timed out
	MemoryExceeded  bool                   `protobuf:"varint,5,opt,name=memory_exceeded,json=memoryExceeded,proto3" json:"memory_exceeded,omitempty"`      // Whether memory limit was exceeded
	ExecutionTimeMs int64                  `protobuf:"varint,6,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"` // Execution time in milliseconds
	MemoryUsedMb    int64                  `protobuf:"varint,7,opt,name=memory_used_mb,json=memoryUsedMb,proto3" json:"memory_used_mb,omitempty"`          // Memory used in MB
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExecuteResponse) Reset() {
	*x = ExecuteResponse{}
	mi := &file_executor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse) ProtoMessage() {}

func (x *ExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_executor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return file_executor_proto_rawDescGZIP(), []int{1}
}

func (x *ExecuteResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ExecuteResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ExecuteResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ExecuteResponse) GetTimeout() bool {
	if x != nil {
		return x.Timeout
	}
	return false
}

func (x *ExecuteResponse) GetMemoryExceeded() bool {
	if x != nil {
		return x.MemoryExceeded
	}
	return false
}

func (x *ExecuteResponse) GetExecutionTimeMs() int64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

func (x *ExecuteResponse) GetMemoryUsedMb() int64 {
	if x != nil {
		return x.MemoryUsedMb
	}
	return 0
}

// Health check request
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_executor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_executor_proto_rawDescGZIP(), []int{2}
}

// Health check response
type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`   // Status of the service
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // Service version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_executor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_executor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_executor_proto_rawDescGZIP(), []int{3}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_executor_proto protoreflect.FileDescriptor

const file_executor_proto_rawDesc = "" +
	"\n" +
	"\x0eexecutor.proto\x12\bexecutor\"\xc4\x01\n" +
	"\x0eExecuteRequest\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x14\n" +
	"\x05input\x18\x03 \x01(\tR\x05input\x12'\n" +
	"\x0ftimeout_seconds\x18\x04 \x01(\x05R\x0etimeoutSeconds\x12&\n" +
	"\x0fmemory_limit_mb\x18\x05 \x01(\x03R\rmemoryLimitMb\x12\x1b\n" +
	"\tcpu_limit\x18\x06 \x01(\x01R\bcpuLimit\"\xf3\x01\n" +
	"\x0fExecuteResponse\x12\x16\n" +
	"\x06stdout\x18\x01 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x02 \x01(\tR\x06stderr\x12\x1b\n" +
	"\texit_code\x18\x03 \x01(\x05R\bexitCode\x12\x18\n" +
	"\atimeout\x18\x04 \x01(\bR\atimeout\x12'\n" +
	"\x0fmemory_exceeded\x18\x05 \x01(\bR\x0ememoryExceeded\x12*\n" +
	"\x11execution_time_ms\x18\x06 \x01(\x03R\x0fexecutionTimeMs\x12$\n" +
	"\x0ememory_used_mb\x18\a \x01(\x03R\fmemoryUsedMb\"\x0f\n" +
	"\rHealthRequest\"B\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion2\x8b\x01\n" +
	"\fCodeExecutor\x12>\n" +
	"\aExecute\x12\x18.executor.ExecuteRequest\x1a\x19.executor.ExecuteResponse\x12;\n" +
	"\x06Health\x12\x17.executor.HealthRequest\x1a\x18.executor.HealthResponseB\x15Z\x13code-executor/protob\x06proto3"

var (
	file_executor_proto_rawDescOnce sync.Once
	file_executor_proto_rawDescData []byte
)

func file_executor_proto_rawDescGZIP() []byte {
	file_executor_proto_rawDescOnce.Do(func() {
		file_executor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_executor_proto_rawDesc), len(file_executor_proto_rawDesc)))
	})
	return file_executor_proto_rawDescData
}

var file_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_executor_proto_goTypes = []any{
	(*ExecuteRequest)(nil),  // 0: executor.ExecuteRequest
	(*ExecuteResponse)(nil), // 1: executor.ExecuteResponse
	(*HealthRequest)(nil),   // 2: executor.HealthRequest
	(*HealthResponse)(nil),  // 3: executor.HealthResponse
}
var file_executor_proto_depIdxs = []int32{
	0, // 0: executor.CodeExecutor.Execute:input_type -> executor.ExecuteRequest
	2, // 1: executor.CodeExecutor.Health:input_type -> executor.HealthRequest
	1, // 2: executor.CodeExecutor.Execute:output_type -> executor.ExecuteResponse
	3, // 3: executor.CodeExecutor.Health:output_type -> executor.HealthResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_executor_proto_init() }
func file_executor_proto_init() {
	if File_executor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_executor_proto_rawDesc), len(file_executor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_executor_proto_goTypes,
		DependencyIndexes: file_executor_proto_depIdxs,
		MessageInfos:      file_executor_proto_msgTypes,
	}.Build()
	File_executor_proto = out.File
	file_executor_proto_goTypes = nil
	file_executor_proto_depIdxs = nil
}
